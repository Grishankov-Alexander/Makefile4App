##################################################################
# Generic GNU Makefile for building C applications on Linux
#
# This software is provided 'as-is', without any express or implied
# warranty. In no event will the authors be held liable for any damages
# arising from the use of this software.
#
# Permission is granted to anyone to use this software for any purpose,
# including commercial applications, and to alter it and redistribute it
# freely, subject to the following restrictions:
#
# 1. The origin of this software must not be misrepresented; you must not
#    claim that you wrote the original software. If you use this software
#    in a product, an acknowledgment in the product documentation would
#    be appreciated but is not required.
#
# 2. Altered source versions must be plainly marked as such, and must not
#    be misrepresented as being the original software.
#
# 3. This notice may not be removed or altered from any source
#    distribution.
#
# Inspired by zlib
#		https://github.com/madler/zlib
# Author: Grishankov Alexander
#		https://github.com/Grishankov-Alexander
#
# Copyright (c) 2022 Alexander Grishankov
##################################################################




# Your application name and version
APPNAME=myapp

# Project directories
DIRSRC=src
DIRINC=include
DIRLIB=lib
DIRBUILD=build
DIRHELPER=helper

# List of C Sources and corresponding objects
SRC_C:=$(wildcard $(DIRSRC)/*.c)
OBJS:=$(patsubst $(DIRSRC)/%.c,$(DIRBUILD)/%.o,$(SRC_C))

# Headers
SRC_H:=$(wildcard $(DIRSRC)/*.h)

# API headers
SRC_H_API:=$(wildcard $(DIRINC)/*.h)

# Libraries to link with
LIBSTATICFOREIGN:=$(wildcard $(DIRLIB)/*.a)
LIBSHAREDFOREIGN:=$(wildcard $(DIRLIB)/*.so) $(wildcard $(DIRLIB)/*.so.*)
LIBSFOREIGN:=$(LIBSHAREDFOREIGN) $(LIBSTATICFOREIGN)
LIBSSYSTEM=-lc -lm

# Programs for building
CC=gcc

# Flags for building
CPPFLAGS:=-I$(DIRSRC) -I$(DIRINC)
CFLAGS=-O3 -std=c17 -Wall -pedantic
LDFLAGS:=-L$(DIRLIB) \
	-Wl,-rpath='$$ORIGIN:$$ORIGIN/$(DIRLIB):$$ORIGIN/../$(DIRLIB)' \
	-Wl,-rpath-link='$(DIRLIB)'
LDLIBS:=$(LIBSSYSTEM) $(addprefix -l:,$(notdir $(LIBSFOREIGN)))

all: $(DIRBUILD)/$(APPNAME)

$(DIRBUILD)/$(APPNAME): $(OBJS) $(LIBSFOREIGN)
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(OBJS) $(LDLIBS)

# TODO
install: all

clean:
	-rm -f $(DIRBUILD)/* $(DIRBUILD)/*~ *~

# TODO
uninstall:

$(DIRBUILD)/%.o: $(DIRSRC)/%.c
	$(CC) $(CFLAGS) $(CPPFLAGS) -c -o $@ $<

deps.linux: finddeps $(SRC_C) $(SRC_H) $(SRC_H_API)
	-@echo -n "" > $@
	-@for src in $(basename $(notdir $(SRC_C))); do \
	    deps=$$(./$< $(DIRSRC)/$$src.c $(DIRSRC) $(DIRINC)); \
		echo -n "$(DIRBUILD)/$$src.o: " >> $@; \
		echo $$deps >> $@; \
		echo "" >> $@; \
	done

finddeps: $(DIRHELPER)/finddeps.c
	$(CC) $(CFLAGS) -o $@ $<

include deps.linux